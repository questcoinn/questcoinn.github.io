<pre>
<h2>&lt;데이터베이스의 개념&gt;</h2>

<h3>1. 정보 시스템</h3>
* 자료(Data): 가공되지 않은 결과
  정보(Information): 자료를 가공해서 얻은 결과

* 정보 시스템: 필요한 자료를 수집, 저장했다가 필요시 처리하여 유용한 정보를 생성, 분배
  * 자료 처리 시스템: 정보 시스템의 sub 시스템
    1. 일괄 처리 시스템
      - 일정 시간, 양의 데이터를 모아 한번에 처리
      - 순차접근을 사용하는 업무에 유리
    2. 실시간 처리 시스템
    3. 분산 처리 시스템

* 데이터 웨어하우스: 주 업무 시스템에서 추출돼 새롭게 생성된 데이터베이스

<h3>2. 데이터베이스의 개념</h3>
* 정의
  - 통합(Integrated): 자료의 중복이 배제됨
  - 저장(Stored): 저장매체에 저장됨
  - 운영(Operational): 조직 고유 업무 수행에 꼭 필요한 자료
  - 공용(Shared): 여러 응용 시스템들이 공동으로 소유하고 유지

* 특징
  - 실시간 접근성: 실시간 처리의 응답이 가능
  - 계속적인 변화: 동적인 삽입, 삭제, 갱신을 통해 항상 최신의 데이터 유지
  - 동시 공용: 다수의 사용자가 동시에 같은 내용의 데이터를 이용할 수 있음
  - 내용 참조: 주소가 아닌 데이터의 내용으로 데이터를 조회

* 데이터베이스 시스템: 데이터베이스를 이용하여 자료를 저장, 관리하는 컴퓨터 중심의 시스템
  * 구성요소
    - 데이터베이스
    - 스키마
    - DBMS(DataBase Management System)
    - 데이터베이스 언어
    - 데이터베이스 컴퓨터
    - 데이터베이스 사용자

<h3>3. DBMS의 기능</h3>
* 정의(DataBase Management System)
  - 사용자 요구에 따라 정보를 생성하고, 데이터베이스를 관리해주는 소프트웨어
  - 파일 처리 방식의 종속성과 중복성의 문제를 해결하기 위해 제안됨
  - 데이터베이스에 대한 모든 책임을 짐

* 파일 처리 방식의 문제점
  1. 종속성: 보조기억장치에 저장되는 방법이나 데이터 접근 방법을 변경할 때, 응용프로그램도 같이 변경해야함
    - 논리적 독립성: 응용프로그램 <--> 데이터베이스
    - 물리적 독립성: 응용프로그램 <--> 물리적 저장장치
  2. 중복성: 다음의 문제들이 발생
   - 일관성: 중복 데이터간 내용 불일치
   - 보안성
   - 경제성
   - 무결성: 제어 분산으로 정확성을 유지하기 어려움

* 필수 기능
  - 정의기능: 데이터 타입, 구조, 이용방식, 제약조건, 데이터 연산 등을 명시
  - 조작(Manipulation)기능: 인터페이스 수단 제공
  - 제어(Control)기능: 무결성과 보안 유지, 병행제어(Concurrency Control)

* 단점: 백업과 회복이 어려움, 과부하 발생 가능성

<h3>4. Schema</h3>
* 정의
  - 데이터베이스의 전반적인 명세를 기술한 "메타데이터" 집합
  - 데이터 개체(Entity), 속성(Attribute), 관계(Relation), 제약조건 등을 정의

* 특징
  - Data Dictionary에 저장됨
  - 시간에 따라 불변
  - 데이터의 구조적인 특성으로서, 인스턴스에 의해 규정됨

* 3계층
  1. 외부(External / Sub) 스키마 = 사용자 뷰(View)
    - 사용자나 응용프로그래머의 입장에서 필요로 하는 데이터의 논리적 구조를 정의
    - 하나의 데이터베이스에 여러 서브 스키마가 존재 가능
    - 하나의 데이터베이스에 대해 여러 관점을 정의 가능
    - 질의어나 프로그래밍 언어를 이용해 조작
  2. 개념(Conceptual) 스키마 = 전체적인 뷰
    - 데이터베이스의 전체적 논리구조
    - 하나만 존재
    - 개체 간 제약조건, 접근권한, 보안, 무결성 규칙 등을 정의
    - 데이터베이스에 저장되는 데이터의 형태
    - 데이터베이스 관리자에의해 구성됨
  3. 내부(Internal / Storage) 스키마
    - 물리적 저장장치의 입장에서의 스키마
    - 시스템 프로그래머나 시스템 설계자의 관점

<h3>5. 데이터베이스 언어</h3>
1. 데이터 정의 언어(Data Definition Language; DDL)
  - DB구조, 데이터 형식, 접근 방식
  - 데이터 사전에 여러 테이블로 저장됨

2. 데이터 조작 언어(Data Manipulation Language; DML)
  - 사용자가 데이터를 처리할 수 있게 하는 도구(인터페이스)
  - 응용프로그램을 통해 조작하기 위해 포트란, 코볼 등에 DB기능을 추가하여 만든 언어
    * 절차적 언어: 절차에 맞게 구체적으로 명시
      비절차적 언어: 어떤 데이터가 필요한지만을 명시하고, 어떨게 구하는지는 명시하지 않음 ex) 질의어
  - 조건
    - 자연언어에 가까워야 함
    - 연산, 관계를 정확하고 완전히 명시할 수 있어야 함
    - 효율적 구현을 지원해야 함

3. 데이터 제어 언어(Data Control Language; DCL)
  - 무결성, 보안, 권한제어, 회복, 데이터 보호 및 관리

<h3>6. 데이터베이스 사용자</h3>
1. DBA(DataBase Administrator): 데이터베이스의 모든 관리 및 운영에 대한 책임을 짐
  - 설계와 조작
  - 행정 책임
  - 시스템 감시 및 성능 분석

2. 응용프로그래머
  - 일반 호스트언어를 사용할 때, DML을 삽입하여 일반 사용자가 사용할 수 있도록 인터페이스 제공

3. 일반 사용자
</pre>